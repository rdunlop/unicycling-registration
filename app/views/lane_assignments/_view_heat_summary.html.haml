
- max_lane = @lane_assignments.map(&:lane).max || 0
%ul.lane_assignments_list
  - max_lane.downto(1) do |lane_number|
    - assignment = @lane_assignments.where(lane: lane_number).first
    - if assignment
      %li.occupied_lane
        %p.lane= assignment.lane
        %p.registrant.js--shrinkToFit.bib_number= "##{assignment.competitor.bib_number}"
        %p.registrant.js--shrinkToFit= "#{assignment.competitor}"
        %p{class: "status-#{assignment.status}"}= assignment.status
        %p= assignment.comments
        %span.unhide_dq.js--toggle{data: {toggle: "dq_option#{assignment.lane}"}} Show DQ option
        %div.dq_option{class: "dq_option#{assignment.lane}"}
          = form_for DqRequest.new(bib_number: assignment.competitor.bib_number, heat: @heat, lane: lane_number,comments_by: current_user.name ), url: dq_competitor_competition_lane_assignments_path(@competition) do |f|
            = f.hidden_field :bib_number
            = f.hidden_field :heat
            = f.hidden_field :lane
            = f.label :comments
            = f.text_field :comments, {required: true }
            = f.label :comments_by
            = f.text_field :comments_by, {required: true }
            = f.submit "DQ this competitor", data: { confirm: "Are you sure?" }
    - else
      %li.unoccupied_lane
        %p.lane= lane_number

- if max_lane == 0 && @other_competition
  There don't appear to be any lane assignments for this heat in this competition.
  = link_to  "Change to #{@other_competition} Heat ##{@heat}", view_heat_competition_lane_assignments_path(@other_competition, heat: @heat), class: 'next_action'
